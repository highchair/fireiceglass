/// fluid-units() =
/// Set a minimum value, maximum value, and use calc() to fluidly go from one to the other in between
/// @author Indrek Paas @indrekpaas
/// @link http://www.sassmeister.com/gist/7f22e44ace49b5124eec
/// @link Inspired by http://madebymike.com.au/writing/precise-control-responsive-typography/
///
/// @require {function} strip-unit
///
/// @param {List} $properties
///   List one or multiple properties to assign values to
///
/// @param {String} $min-value
/// @param {String} $max-value
///   Min/Max values for the measurement. The same units should be used (px, em, rem)
///
/// @param {String} $min-vw
/// @param {String} $max-vw
///   Min/Max viewport width. Which viewport "locks" should the fluid measurements start and end at?
///
/// @param {String} $unit
///   Assumes 1em by default
///
/// @example scss - Usage with CSS vars
///  // .element {
///  //   @include fluid-units(padding-top padding-bottom, var(--padding-x-min), var(--padding-x-max), 480, 1200);
///  // }
///
/// @example css - Output
///  // .element {
///  //   padding-top: 1em;
///  //   padding-bottom: 1em;
///  // }
///  // @media (min-width: 38.75em) {
///  //   .element {
///  //     padding-top: calc(1em + 3 * (100vw - 38.75em) / 46.25);
///  //     padding-bottom: calc(1em + 3 * (100vw - 38.75em) / 46.25);
///  //   }
///  // }
///  // @media (min-width: 85em) {
///  //   .element {
///  //     padding-top: calc(1em + 3 * 1em);
///  //     padding-bottom: calc(1em + 3 * 1em);
///  //   }
///  // }
///
@function fluid-calc($min-value, $max-value, $min-vw, $max-vw, $unit: 1rem) {
  @return calc(( #{$min-value} * #{$unit} ) + ( #{$max-value} - #{$min-value} ) * ((100vw - #{$min-vw * $unit}) / ( #{$max-vw} - #{$min-vw} )));
}

@mixin fluid-units($properties, $min-value, $max-value, $min-vw, $max-vw, $unit: 1rem) {
  
  // Mobile-first: declare the $min-value as the default for any property passed
  @each $property in $properties {
    #{$property}: calc(#{$min-value} * #{$unit});
  }

  // Now declare the creamy, fluid center using a media query at the min-width
  @media (min-width: ($min-vw * $unit)) {
    @each $property in $properties {
      #{$property}: fluid-calc($min-value, $max-value, $min-vw, $max-vw, $unit);
    }
  }

  // Finally, stop the crazy fluidity and set the max value at the max viewport width
  @media (min-width: ($max-vw * $unit)) {
    @each $property in $properties {
      #{$property}: calc(#{$max-value} * #{$unit});
    }
  }
}
